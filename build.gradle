plugins {
    id "groovy"
    id "war"
    id "idea"
    id "org.grails.grails-plugin"
    id "application"
    id "eclipse"

    id "com.bertramlabs.asset-pipeline" version "4.3.0"
    id 'org.grails.grails-gsp'
    id 'signing'
    id 'com.jfrog.artifactory' version "5.2.5"
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin'
}

group = "io.github.grails-spring-security-saml"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://repo1.maven.org/maven2/"}
    maven { url "https://build.shibboleth.net/maven/releases/"}
}

configurations {
    all {
    }
}

dependencies {
    implementation("org.grails:grails-core")
    implementation("org.grails:grails-logging")
    implementation("org.grails:grails-plugin-databinding")
    implementation("org.grails:grails-plugin-i18n")
    implementation("org.grails:grails-plugin-interceptors")
    implementation("org.grails:grails-plugin-rest")
    implementation("org.grails:grails-plugin-services")
    implementation("org.grails:grails-plugin-url-mappings")
    implementation("org.grails:grails-web-boot")

    //implementation("org.grails.plugins:hibernate5")
    //implementation("org.hibernate:hibernate-core:5.6.15.Final")
    implementation("org.springframework.boot:spring-boot-autoconfigure")
    implementation("org.springframework.boot:spring-boot-starter-logging")
    implementation("org.springframework.boot:spring-boot-starter-validation")

    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"

    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:gsp"

    implementation 'org.grails.plugins:spring-security-core:6.1.2'
    implementation 'org.springframework.security:spring-security-saml2-service-provider:5.8.15'
    implementation 'org.opensaml:opensaml-core:4.3.2'
    implementation 'org.opensaml:opensaml-saml-api:4.3.2'
    implementation 'org.opensaml:opensaml-saml-impl:4.3.2'

    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    implementation "org.grails:grails-plugin-services"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-gradle:3.4.4"
    testCompileOnly "org.grails:grails-gorm-testing-support"
    //testCompileOnly "org.grails:grails-plugin-testing"
    testCompileOnly "org.grails:grails-web-testing-support"
    testCompileOnly "org.mockito:mockito-core"
    testRuntimeOnly 'com.h2database:h2'
    testRuntimeOnly 'com.zaxxer:HikariCP:2.7.4'

    developmentOnly("org.springframework.boot:spring-boot-devtools")

    implementation 'javax.servlet:javax.servlet-api:3.1.0'

    implementation "org.grails:grails-console"

    implementation "joda-time:joda-time:2.9.7"
}

application {
    mainClass.set("org.grails.plugin.springsecurity.saml.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks.withType(Test) {
    useJUnitPlatform()
}

bootRun {
    jvmArgs(
        '-Dspring.output.ansi.enabled=always',
        '-noverify',
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
bootJar.enabled = false

ext."signing.keyId" = project.hasProperty("signing.keyId") ? project.getProperty('signing.keyId') : System.getenv('SIGNING_KEY_ID')
ext."signing.password" = project.hasProperty("signing.password") ? project.getProperty('signing.password') : System.getenv('SIGNING_PASSPHRASE')
ext."signing.secretKeyRingFile" = project.hasProperty("signing.secretKeyRingFile") ? project.getProperty('signing.secretKeyRingFile') : (System.getenv('SIGNING_SECRING')?:"${System.properties['user.home']}${File.separator}.gnupg${File.separator}secring.gpg")

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

afterEvaluate {
   signing {
       required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
       sign publishing.publications.maven
   }
}

tasks.withType(Sign) {
   onlyIf { isReleaseVersion }
}

publishing {
   publications {
       maven(MavenPublication) {
           groupId = project.group
           artifactId = rootProject.name
           version = project.version

           from components.java
           artifact sourcesJar
           artifact javadocJar

           pom {
               name = 'Grails Spring Security SAML2.0 Plugin for Grails'
               description = 'The Plugin basically creates a bridge from your Grails application configuration ' + \
                            'to both the Spring Security SAML service provider library and the Grails Spring Security Plugin. ' + \
                            'Instead of having to map all of the beans in your application, the plugin wires the SAML service provider ' + \
                            'beans based on your application configuration.'
               url = 'https://github.com/grails-spring-security-saml/grails-spring-security-saml'
               licenses {
                   license {
                       name = 'The Apache License, Version 2.0'
                       url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                   }
               }
               developers {
                   developer {
                       id = 'valentingoebel'
                       name = 'Valentin GÃ¶bel'
                       email = 'valentin.goebel@tu-braunschweig.de'
                   }
               }
               scm {
                   connection = 'scm:git:git://github.com/grails-spring-security-saml/grails-spring-security-saml.git'
                   developerConnection = 'scm:git:ssh://github.com:grails-spring-security-saml/grails-spring-security-saml.git'
                   url = 'https://github.com/grails-spring-security-saml/grails-spring-security-saml/tree/main'
               }
           }
       }
   }
}

// https://grails.org/blog/2021-04-07-publish-grails-plugin-to-maven-central.html
nexusPublishing {
   repositories {
       sonatype {
           def ossUser = System.getenv("SONATYPE_USERNAME") ?: project.hasProperty("sonatypeOssUsername") ? project.sonatypeOssUsername : ''
           def ossPass = System.getenv("SONATYPE_PASSWORD") ?: project.hasProperty("sonatypeOssPassword") ? project.sonatypeOssPassword : ''
           def ossStagingProfileId = System.getenv("SONATYPE_STAGING_PROFILE_ID") ?: project.hasProperty("sonatypeOssStagingProfileId") ? project.sonatypeOssStagingProfileId : ''
           nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
           snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
           username = ossUser
           password = ossPass
           stagingProfileId = ossStagingProfileId
       }
   }
}

artifactory {
    contextUrl = "https://grailsrepo.rz.tu-bs.de/artifactory/"
    publish {
        repository {
            repoKey = 'tubs-grails'
            username = System.getenv("GRAILSREPO_USER")
            password = System.getenv("GRAILSREPO_PASS")
            //maven = true
        }
        defaults {
            publications('maven')
        }
    }
    /*resolve {
        repository {
            repoKey = 'tubs-grails'
            username = System.getenv("GRAILSREPO_USER")
            password = System.getenv("GRAILSREPO_PASS")
            //maven = true
        }
    }*/
}