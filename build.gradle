buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
        classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id "com.jfrog.bintray" version "1.2"
    id "com.jfrog.artifactory" version "3.1.1"
}

version "3.3.1-SNAPSHOT"
group "org.grails.plugins"

//apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.springframework.boot"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: "com.jfrog.artifactory"
apply plugin: "com.jfrog.bintray"
apply plugin: "io.spring.dependency-management"
// Used for publishing to central repository, remove if not needed
//apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
//apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

grailsPublish {
    user = System.getenv("BINTRAY_USER") ?: System.getProperty("bintray.user") ?: project.hasProperty("bintrayUser") ? project.bintrayUser : ''
    key = System.getenv("BINTRAY_KEY") ?: System.getProperty("bintray.key") ?: project.hasProperty("bintrayKey") ? project.bintrayKey : ''
    websiteUrl = project.hasProperty('websiteUrl') ? project.websiteUrl : "http://grails.org/plugin/$project.name"
    license {
        name = project.hasProperty('license') ? [project.license] : ['Apache-2.0']
    }
    issueTrackerUrl = project.hasProperty('issueTrackerUrl') ? project.issueTrackerUrl : "https://github.com/grails3-plugins/$project.name/issues"
    vcsUrl = project.hasProperty('vcsUrl') ? project.vcsUrl : "https://github.com/grails3-plugins/$project.name"
    title = 'Grails spring-security-saml'
    desc = project.hasProperty('desc') ? project.desc : "Grails $project.name plugin"
    developers = [jeffwils:"Jeff Wilson",valentingoebel:"Valentin Goebel",irstevenson:"I Stevenson"]

}

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://build.shibboleth.net/nexus/content/repositories/releases"}
    maven { url "https://build.shibboleth.net/nexus/content/groups/public/"}
    maven { url "https://code.lds.org/nexus/content/groups/main-repo"}
    maven { url "http://repository.jboss.org/maven2/"}
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided "org.grails:grails-core"
    provided 'org.grails:grails-logging'

    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    provided "org.springframework.boot:spring-boot-starter-security"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile 'org.grails:grails-gorm-testing-support'
    testCompile 'org.grails:grails-plugin-testing'
    testCompile 'org.grails:grails-web-testing-support'

    integrationTestCompile 'org.grails.plugins:hibernate5'
    integrationTestCompile 'org.hibernate:hibernate-core:5.1.5.Final'

    integrationTestRuntime 'com.h2database:h2'
    integrationTestRuntime 'com.zaxxer:HikariCP:2.7.4'

    console "org.grails:grails-console"

    compile 'org.grails.plugins:spring-security-core:3.2.1'

    compile("commons-httpclient:commons-httpclient:3.1") {
        exclude module: ['commons-codec', 'commons-logging', 'junit']
    }

    compile("org.opensaml:opensaml:2.6.6") {
        exclude module: ['commons-codec', 'commons-collections', 'commons-lang', 'esapi', 'jcip-annotations', 'jcl-over-slf4j', 'joda-time', 'jul-to-slf4j', 'junit', 'log4j-over-slf4j', 'logback-classic', 'openws', 'serializer', 'servlet-api', 'slf4j-api', 'spring-core', 'spring-mock', 'testng', 'velocity', 'xalan', 'xercesImpl', 'xml-apis', 'xml-resolver', 'xmlunit']
    }

    compile("org.opensaml:xmltooling:1.4.6") {
        exclude module: ['bcprov-jdk15', 'commons-codec', 'jcip-annotations', 'jcl-over-slf4j', 'joda-time', 'jul-to-slf4j', 'junit', 'log4j-over-slf4j', 'logback-classic', 'not-yet-commons-ssl', 'serializer', 'slf4j-api', 'testng', 'xalan', 'xercesImpl', 'xml-apis', 'xml-resolver', 'xmlsec', 'xmlunit']
    }

    compile("org.apache.velocity:velocity:1.7") {
        exclude module: ['ant', 'commons-collections', 'commons-lang', 'commons-logging', 'hsqldb', 'jdom', 'junit', 'log4j', 'logkit', 'oro', 'servlet-api', 'werken-xpath']
    }

    compile "joda-time:joda-time:2.9.7"

    compile("org.opensaml:openws:1.5.6") {
        exclude module: ['commons-codec', 'commons-httpclient', 'jcip-annotations', 'jcl-over-slf4j', 'joda-time', 'jul-to-slf4j', 'junit', 'log4j-over-slf4j', 'logback-classic', 'serializer', 'servlet-api', 'slf4j-api', 'spring-core', 'spring-mock', 'testng', 'xalan', 'xercesImpl', 'xml-apis', 'xml-resolver', 'xmltooling', 'xmlunit']
    }

    compile "org.bouncycastle:bcprov-jdk15on:1.53"

    compile "org.apache.santuario:xmlsec:2.0.8"

    compile("org.owasp.esapi:esapi:2.0.1") {
        exclude module: [ 'antisamy', 'bsh-core', 'commons-beanutils-core', 'commons-collections', 'commons-configuration', 'commons-fileupload', 'commons-io', 'jsp-api', 'junit', 'log4j', 'servlet-api', 'xom']
    }
    compile 'org.springframework.security.extensions:spring-security-saml2-core:1.0.2.RELEASE'


    compile "org.jdom:jdom-legacy:1.1.3"
}


task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

jar {
    exclude 'test/**'
    exclude 'security/idp-local.xml'
    exclude 'security/keystore.jks'
    exclude 'security/sp.xml'
}
