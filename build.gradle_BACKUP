buildscript {
    repositories {
        mavenLocal()
        maven { url "https://central.maven.org/maven2/"}
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.3.4"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.28.3"
    }
}

version "5.0.0-SNAPSHOT"
group "org.grails.plugins"

apply plugin:"com.jfrog.artifactory"
apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"maven-publish"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    mavenLocal()
    maven { url "https://central.maven.org/maven2/"}
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://build.shibboleth.net/nexus/content/repositories/releases"}
    maven { url "https://build.shibboleth.net/nexus/content/groups/public/"}
    maven { url "https://code.lds.org/nexus/content/groups/main-repo"}
    maven { url "https://repository.jboss.org/maven2/"}
}

/*grailsPublish {
    user = System.getenv("BINTRAY_USER") ?: System.getProperty("bintray.user") ?: project.hasProperty("bintrayUser") ? project.bintrayUser : ''
    key = System.getenv("BINTRAY_KEY") ?: System.getProperty("bintray.key") ?: project.hasProperty("bintrayKey") ? project.bintrayKey : ''
    websiteUrl = project.hasProperty('websiteUrl') ? project.websiteUrl : "http://grails.org/plugin/$project.name"
    license {
        name = project.hasProperty('license') ? project.license : 'Apache-2.0'
    }
    issueTrackerUrl = project.hasProperty('issueTrackerUrl') ? project.issueTrackerUrl : "https://github.com/grails3-plugins/$project.name/issues"
    vcsUrl = project.hasProperty('vcsUrl') ? project.vcsUrl : "https://github.com/grails3-plugins/$project.name"
    title = 'Grails spring-security-saml'
    desc = project.hasProperty('desc') ? project.desc : "Grails $project.name plugin"
    developers = [jeffwils:"Jeff Wilson",valentingoebel:"Valentin Goebel",irstevenson:"I Stevenson"]

}*/

configurations {
    all*.exclude group: 'log4j', module: 'log4j'
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly     'org.springframework.boot:spring-boot-devtools'

    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:gsp"

    implementation 'javax.servlet:javax.servlet-api:3.1.0'

    testCompileOnly 'org.grails:grails-gorm-testing-support'
    testCompileOnly 'org.grails:grails-web-testing-support'

    testCompileOnly 'org.grails.plugins:hibernate5'
    testCompileOnly 'org.hibernate:hibernate-core:5.4.0.Final'

    testRuntimeOnly 'com.h2database:h2'
    testRuntimeOnly 'com.zaxxer:HikariCP:2.7.4'

    implementation "org.grails:grails-console"

    implementation 'org.grails.plugins:spring-security-core:5.0.0-RC1'

    implementation("commons-httpclient:commons-httpclient:3.1") {
        exclude module: ['commons-codec', 'commons-logging', 'junit']
    }

    implementation("org.opensaml:opensaml:2.6.6") {
        exclude module: ['commons-codec', 'commons-collections', 'commons-lang', 'esapi', 'jcip-annotations', 'jcl-over-slf4j', 'joda-time', 'jul-to-slf4j', 'junit', 'log4j-over-slf4j', 'logback-classic', 'openws', 'serializer', 'servlet-api', 'slf4j-api', 'spring-core', 'spring-mock', 'testng', 'velocity', 'xalan', 'xercesImpl', 'xml-apis', 'xml-resolver', 'xmlunit']
    }

    implementation("org.opensaml:xmltooling:1.4.6") {
        exclude module: ['bcprov-jdk15', 'commons-codec', 'jcip-annotations', 'jcl-over-slf4j', 'joda-time', 'jul-to-slf4j', 'junit', 'log4j-over-slf4j', 'logback-classic', 'not-yet-commons-ssl', 'serializer', 'slf4j-api', 'testng', 'xalan', 'xercesImpl', 'xml-apis', 'xml-resolver', 'xmlsec', 'xmlunit']
    }

    implementation("org.apache.velocity:velocity:1.7") {
        exclude module: ['ant', 'commons-collections', 'commons-lang', 'commons-logging', 'hsqldb', 'jdom', 'junit', 'log4j', 'logkit', 'oro', 'servlet-api', 'werken-xpath']
    }

    implementation "joda-time:joda-time:2.9.7"

    implementation("org.opensaml:openws:1.5.6") {
        exclude module: ['commons-codec', 'commons-httpclient', 'jcip-annotations', 'jcl-over-slf4j', 'joda-time', 'jul-to-slf4j', 'junit', 'log4j-over-slf4j', 'logback-classic', 'serializer', 'servlet-api', 'slf4j-api', 'spring-core', 'spring-mock', 'testng', 'xalan', 'xercesImpl', 'xml-apis', 'xml-resolver', 'xmltooling', 'xmlunit']
    }

    implementation "org.bouncycastle:bcprov-jdk15on:1.53"

    implementation "org.apache.santuario:xmlsec:2.0.8"

    implementation("org.owasp.esapi:esapi:2.0.1") {
        exclude module: [ 'antisamy', 'bsh-core', 'commons-beanutils-core', 'commons-collections', 'commons-configuration', 'commons-fileupload', 'commons-io', 'jsp-api', 'junit', 'log4j', 'servlet-api', 'xom']
    }
    implementation 'org.springframework.security.extensions:spring-security-saml2-core:1.0.9.RELEASE'

    implementation "org.jdom:jdom-legacy:1.1.3"
}

bootRun {
    jvmArgs(
        '-Dspring.output.ansi.enabled=always',
        '-noverify',
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

assets {
    packagePlugin = true
}

publishing {
   publications {
       maven(MavenPublication) {
           groupId = project.group
           artifactId = rootProject.name
           version = project.version

           from components.java
           artifact sourcesJar
           artifact javadocJar

           pom {
               name = rootProject.name
               description = rootProject.name
               url = "http://grails.org/plugin/$project.name"
           }
       }
   }
}

jar {
    exclude 'test/**'
    exclude "UrlMappings**"
    exclude 'security/keystore.jks'
    exclude 'security/sp.xml'
    exclude 'security/idp-local.xml'
    exclude 'saml/test.xml'
}
